################
#  CheatSheet  #
################
# `_`: snippet argument, T: trigger key needed

# Environments:
# beg T-> begin end
# mc T-> \[ \]
# mi T-> \( \)
# M`p211n` -> (1\\ 1)
# lr`)` -> \left( \right)
# sst -> \{ \}
# dsp -> \displaystyle
# ali T-> begin aligned
# gat T-> begin gathered
# cas T-> begin cases
# enm T-> begin enumerate
# itz T-> begin itemize
# adm T-> begin addmargin[1em][0em]
# mindb T-> begin minted{}
# minti T-> \mintinline{}{}

# Arguments:
# ssm -> \sum_{i=1}^{}
# ppr -> \prod_{i=1}^{}
# lli -> \lim_{x \to \infty}
# alli -> \xrightarrow[x \to \infty]
# dint -> \int_{-\infty}^{\infty}
# ff -> \frac{}{}
# sqt -> \sqrt{}
# vv -> \vv{}
# ce T-> \ce{}
# mrm -> \mathrm{}
# unbc -> \underbrace{}_{}
# ovbc -> \overbrace{}_{}
# can T-> \cancel{}
# txt T-> \text{}
# chp T-> \chapter{}
# sec T-> \section{}
# ssec T-> \subsection{}
# sssec T-> \subsubsection{}

# Commands:
# iim -> \implies
# iimb -> \impliedby
# iff -> \iff
# ge -> \ge
# le -> \le
# app -> \approx 
# ne -> \neq
# sim -> \sim
# iin -> \infty
# ee -> \exists
# fa -> \forall
# xx -> \times
# cd -> \cdot
# stm -> \setminus
# ssb -> \subset
# lra -> \leftrightarrow 
# Lra -> \Leftrightarrow 
# qq -> \quad
# ... -> \ldots
# g`aa` -> \alpha
# sin -> \sin 
# asin -> \arcsin 
# cos -> \cos 
# acos -> \arccos 
# tan -> \tan 
# atan -> \arctan 
# cot -> \cot
# sec -> \sec
# ln -> \ln
# log -> \log
# max -> \max
# min -> \min
# deg -> \deg
# arg -> \arg
# perp -> \perp
# dim -> \dim
# det -> \det
# in -> \in
# cup -> \cup
# cap -> \cap
# pm -> \pm
# mp -> \mp
# Im -> \Im
# Re -> \Re
# bar -> \bar
# dot -> \dot
# hat -> \hat

# Auto:
# `x1` -> x_1
# `x11` -> x_{11}
# `1`/`2` -> \frac{1}{2}
# `3gppsq`/ -> \frac{3\pi^2}{}
# (`xsq - 7gaa`)/ -> \frac{x^2 - 7\alpha}{}
# (`3x - y`)rt -> \sqrt{(3x -y)}
# (`3x - y`)rt3 -> \sqrt[3]{(3x -y)}

# Subscript / Superscript
# __ -> _{}
# -- -> ^{}
# sq -> ^2
# cb -> ^3
# xn -> x_n
# xi -> x_i
# yn -> y_n
# yi -> y_i
# p1n -> _{n+1}
# m1n -> _{n-1}
# p1i -> _{i+1}
# m1i -> _{i-1}

# Miscellaneous:
# texdoc T-> new document template
# bld T-> \textbf{}
# itl T-> \textit{}
# `A`# -> \mathbb{A}
# `A`## -> \mathcal{A}
# ddx -> \\,dx
# ddz -> \\,dz
# ddt -> \\,dt


global
function math(context) {
    return context.scopes.some(s => s.startsWith("meta.math"));
}
endglobal

global
function text(context) {
    return !context.scopes.some(s => s.startsWith("meta.math") || s.startsWith("meta.embedded") || s.startsWith("source"));
}
endglobal

context text(context)
snippet texdoc "[G] Document template" w
\documentclass[12pt, a4paper, openany]{report}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}

${1:% LANGUAGE
\usepackage[english,french]{babel\}
    \selectlanguage{french\}
    \frenchsetup{StandardItemLabels=true\}
\usepackage{enumitem\}  % Enumerate improved

}% MATH / Others
\usepackage{amsmath, amssymb}  % Math symbols
\usepackage{esvect, cancel}  % Misc., vectors, strikethrough
${2:\usepackage{mhchem\}  % Chemistry
}\usepackage{siunitx}  % Units SI
${3:\usepackage{minted\}  % Code fences ([cache=false])
\setminted[python]{
    fontsize=\footnotesize,
    tabsize=4,
    rulecolor=black,
    xleftmargin=18pt,
    linenos,
    breaklines
\}
}
% GEOMETRY
\usepackage[
    paper=a4paper,
    top=2.5cm,
    left=2.25cm,
    headheight=15pt,
    headsep=12pt,
    textwidth=16cm,
    textheight=24cm,
]{geometry}
\usepackage{parskip}  % Reformat paragraphs, no indent first line
\usepackage{enumitem}  % Enumerate improved
\usepackage{scrextend}  % Indent text with addmargin environment
${4:\usepackage{graphicx\}  % Include graphics
\graphicspath{{latex-img/\}\}
\usepackage{caption\}  % Caption without figures

}
% HYPERLINKS
\usepackage{hyperref}
\hypersetup{
    colorlinks=true,
    linktoc=all,
    linkcolor=blue,
}

% HEADERS
\usepackage{fancyhdr}
    \pagestyle{fancy}
    \lhead{$6}
    \rhead{$7}
    \renewcommand{\footrulewidth}{0.4pt}
    \renewcommand{\headrulewidth}{0.4pt}
\usepackage{etoolbox}  % Define chapter page style
    \patchcmd{\chapter}{\thispagestyle{plain}}{\thispagestyle{fancy}}{}{}

% TITLE PAGE
\title{${6:Title}}
\author{${7:Author}}
\date{${8:Date}}

\begin{document}
% TITLE
\maketitle
${5:% TOC
\pagenumbering{gobble\}{
    \tableofcontents
    \thispagestyle{plain\}
    \cleardoublepage
\}
\pagenumbering{arabic\}
}
$0

\end{document}
endsnippet

snippet beg "[G] begin/end" w
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet mc "[G] Math centered" w
\[
	$1
\]
endsnippet

context math(context)
snippet `M([\ pbvBV])(\d)(\d)(.)([bn])` "[G] Matrix" A
``
t = m[1] === ' ' ? '' : m[1]
n = 1
res = `\\begin{${t}matrix}`
res += m[5] == "b" ? "\n" : ''
for (let i = 0; i < m[2]; i++) {
	for (let j = 0; j < m[3]; j++) {
		res += `\${${n++}:${m[4]}}`
		if (j + 1 != m[3]) {
			res += " & "
		} else {
			if (i + 1 != m[2]) {
				res += "\\\\\\\\"
			}
			res += m[5] == "b" ? "\n" : ''
		}
	}
}
res += `\\end{${t}matrix}`
rv = res
``
endsnippet

context math(context)
snippet `lr([\)\]\>\}vV])` "[G] Left-right" A
`` trans = {")": ["(", ")"], "]": ["[", "]"], ">": ["<", ">"], "}": ["{", "}"], "v": ["\\lvert", "\\rvert"], "V": ["\\lVert", "\\rVert"]}
rv = "\\left" + trans[m[1]][0] + " $1 " + "\\right" + trans[m[1]][1] ``
endsnippet

context math(context)
snippet `(?<![\\a-zA-Z])g([a-zA-Z])\1{1}(?![a-zA-Z])` "[G] Greek letter" A
`` trans = {"a": "\\alpha", "b": "\\beta", "g": "\\gamma", "G": "\\Gamma", "d": "\\delta", "D": "\\Delta", "e": "\\epsilon", "E": "\\varepsilon", "z": "\\zeta", "h": "\\eta", "t": "\\theta", "T": "\\Theta", "k": "\\kappa", "i": "\\iota", "l": "\\lambda", "L": "\\Lambda", "m": "\\mu", "n": "\\nu", "x": "\\xi", "X": "\\Xi", "p": "\\pi", "P": "\\Pi", "r": "\\rho", "s": "\\sigma", "S": "\\Sigma", "o": "\\omega", "O": "\\Omega", "c": "\\chi", "f": "\\phi", "F": "\\varphi", "y": "\\upsilon", "Y": "\\Upsilon", "v": "\\psi", "V": "\\Psi", "u": "\\tau" }
rv = (trans[m[1]] || ("g" + m[1] + m[1])) ``
endsnippet

context math(context)
snippet ssm "[G] Sum" wA
\\sum_{${1:i}=${2:1}}^{$3} 
endsnippet

context math(context)
snippet ppr "[G] Product" wA
\\prod_{${1:i}=${2:1}}^{$3} 
endsnippet

context math(context)
snippet lli "[G] Limit" wA
\\lim\\limits_{${1:x} \\to ${2:\infty}} 
endsnippet

context math(context)
snippet alli "[G] Arrow limit" wA
\\xrightarrow[${1:x} \\to ${2:\infty}]{} 
endsnippet

context math(context)
snippet dint "[G] Integral" wA
\\int_{${1:-\\infty}}^{${2:\\infty}} 
endsnippet

context math(context)
snippet `\b([A-Z])#` "[G] Math bb" A
``rv = '\\mathbb{' + m[1] + '}'``
endsnippet

context math(context)
snippet `\\mathbb{([A-Z])}#` "[G] Math cal (F##)" A
``rv = '\\mathcal{' + m[1] + '}'``
endsnippet

context math(context)
snippet mrm "[G] Math rm" A
\\mathrm{$1}
endsnippet

context math(context)
snippet __ "[G] Subscript" iA
_{$1}
endsnippet

context math(context)
snippet `(\B\\[A-Za-z]+|\b[A-Za-z])(\d)` "[G] Auto subscript" A
``rv = m[1] + "_" + m[2]``
endsnippet

context math(context)
snippet `(\B\\[A-Za-z]+|\b[A-Za-z])_(\d\d)` "[G] Auto subscript 2" A
``rv = m[1] + "_{" + m[2]``}
endsnippet

context math(context)
snippet sq "[G] Square" iA
^2
endsnippet

context math(context)
snippet cb "[G] Cube" iA
^3
endsnippet

context math(context)
snippet -- "[G] Superscripet" iA
^{$1}
endsnippet

context math(context)
snippet `((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)\/$|(\(((?:\([^()]*\)|[^()])*)\))\/$` "[G] Fraction auto" A
\\frac{`` rv = m[1] || m[10]``}{$1}
endsnippet

context math(context)
snippet ff "[G] Fraction" wA
\\frac{$1}{$2}
endsnippet

context math(context)
snippet `(\(((?:\([^()]*\)|[^()])*)\))rt` "[G] Square root auto" A
\\sqrt{`` rv = m[1] ``}
endsnippet

context math(context)
snippet `\\sqrt(?:\[\d\])?\{(.*)\}(\d)` "[G] N root auto / modify N" A
\\sqrt[`` rv = m[2] ``]{`` rv = m[1] ``}
endsnippet

context math(context)
snippet sqt "[G] Square root"
\\sqrt{$1}
endsnippet

context math(context)
snippet `\b(?<!\\)(deg|arg|sin|cos|tan|cot|sec|perp|ln|log|max|min|dim|det|in|cup|cap|ge|le|sim|pm|mp|Im|Re|bar|dot|hat|iff)` "[G] Commands" A
`` rv = "\\" + m[1] + " " ``
endsnippet

context math(context)
snippet `\b(?<!\\)a(sin|cos|tan)` "[G] Arc-trigo" A
`` rv = "\\arc" + m[1] + " " ``
endsnippet

context math(context)
snippet xn "[G] x_n" wA
x_n
endsnippet

context math(context)
snippet xi "[G] x_i" wA
x_i
endsnippet

context math(context)
snippet p1n "[G] _{n+1}" iA
_{n+1}
endsnippet

context math(context)
snippet m1n "[G] _{n-1}" iA
_{n-1}
endsnippet

context math(context)
snippet p1i "[G] _{i+1}" iA
_{i+1}
endsnippet

context math(context)
snippet m1i "[G] _{i-1}" iA
_{i-1}
endsnippet

context math(context)
snippet yn "[G] y_n" wA
y_n
endsnippet

context math(context)
snippet yi "[G] y_i" wA
y_i
endsnippet

context math(context)
snippet ... "[G] Ldots" wA
\\ldots
endsnippet

context math(context)
snippet iim "[G] Implies" wA
\\implies 
endsnippet

context math(context)
snippet iimb "[G] Implied by" wA
\\impliedby 
endsnippet

context math(context)
snippet ne "[G] Not equal" wA
\\neq 
endsnippet

context math(context)
snippet app "[G] Almost equal" wA
\\approx 
endsnippet

context math(context)
snippet iin "[G] Infinity" wA
\\infty
endsnippet

context math(context)
snippet ee "[G] Exists" wA
\\exists 
endsnippet

context math(context)
snippet fa "[G] For all" wA
\\forall 
endsnippet

context math(context)
snippet xx "[G] Cross" iA
\\times 
endsnippet

context math(context)
snippet cd "[G] cdot" iA
\\cdot 
endsnippet

context math(context)
snippet Lra "[G] Leftrightarrow" wA
\\Leftrightarrow 
endsnippet

context math(context)
snippet lra "[G] leftrightarrow" wA
\\leftrightarrow 
endsnippet

context math(context)
snippet qq "[G] Quad" wA
\\quad 
endsnippet

context math(context)
snippet stm "[G] Setminus" w
\\setminus 
endsnippet

context math(context)
snippet sst "[G] Set" wA
\\{$1\\}
endsnippet

context math(context)
snippet dsp "[G] Displaystyle" wA
\\displaystyle 
endsnippet

context math(context)
snippet ddx "[G] Dx" wA
\\,dx
endsnippet

context math(context)
snippet ddz "[G] Dz" wA
\\,dz
endsnippet

context math(context)
snippet ddt "[G] Dt" wA
\\,dt
endsnippet

context math(context)
snippet ssb "[G] Subset" wA
\\subset 
endsnippet

context math(context)
snippet vv "[G] Vector" wA
\\vv{$1}
endsnippet
